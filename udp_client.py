from socket import *

# 客户端发送一个请求也需要端口，端口是随机分配的
# 创建一个UDP协议的套接字，然后发送一条数据到网络上的另外一个进程

# UDP客户端、创建套接字
client_socket = socket(AF_INET, SOCK_DGRAM)  # SOCK_DGRAM:UDP协议

# 2、定义一个接收消息的目标,8080是一个目标服务器的端口，127.0.0.1是目标服务器地址
server_host_port = ('192.168.88.27', 8080)
# 3、准备即将发送的数据,encode表示按照一种编码格式把数据变成字节数组bytes
# 数据一定是字节数据才能发送
# datas = input('请输入：').encode('utf-8')
Controller1StepDefaultQ =  {'10.10.10.11': [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 0.44, 0.44, 0.44, 0.44], '10.10.10.12': [0.44, -67705.56, -67701.5, -67701.5, -67701.5, -67349.56, -67350.56, -67359.56, -68266.5, -68266.56, -68267.56, -68269.56, -68269.56, -68267.5, -68269.56, -76129.5, -67181.5, -67182.56, -57083.56, -57083.56, -68495.5, -68500.56, -19360.56, 547.5], '10.10.10.13': [0.5, 42.5, 87.44, 86.44, 86.44, 46.5, 46.5, 53.5, 48.44, 50.5, 52.5, 52.5, 51.44, 49.44, 50.5, 55.5, 50.5, 51.5, 2712.5, 2712.5, 2708.44, 2708.44, 2708.44, 463.5], '10.10.10.14': [0.44, 17016.5, 46798.44, 68174.5, 68174.5, 68001.44, 68009.44, 64836.5, 68904.44, 68834.5, 68839.5, 68841.5, 68840.44, 68841.5, 69038.44, 95713.44, 67019.5, 65328.44, 39263.44, 71413.44, 71367.44, 71411.5, 20216.44, 20.44], '10.10.10.15': [0.5, 37.5, 16.44, 16.44, 16.44, 14.44, 14.44, 14.44, 8.44, 8.44, 8.44, 8.44, 8.44, 8.44, 8.44, 16.5, 16.5, 16.5, -0.56, -0.56, -0.56, -0.56, 15.5, 1215.44], '10.10.10.16': [-0.56, 17785.5, 17894.5, 17482.5, 17482.5, -10705.5, -15168.56, -13549.5, 19691.5, 45340.5, 55600.5, 57301.44, 21740.88, 19844.44, 47595.75, 59497.44, 17659.44, -11242.06, -22987.5, 6284.5, 21707.57, 21872.44, 21777.44, -942.56], '10.10.10.17': [-0.56, 817.44, 791, 791, 791, -15214, -43039.69, -878.57, -891.57, -20236, 2178, 30009, 30002.43, 4754, -1207.57, -1218.57, -1215, -1213, -1208.57, -1210.57, -1210.57, -1210.57, -1203, -217.57]}

# 4、发送数据,标识一个进程是通过ip+端口+协议
while True:

    client_socket.sendto(str(Controller1StepDefaultQ).encode('utf-8'), server_host_port)



# 5、关闭套接字，其实就   是释放了系统资源
client_socket.close()
